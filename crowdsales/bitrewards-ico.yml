kovan:
    chain: kovan
    verify_on_etherscan: yes
    browser_driver: chrome
    solc:
        version: v0.4.14+commit.c2215d46
        optimizations:
            optimizer: true
            runs: 500
    contracts:
        team_multisig:
            contract_name: MultiSigWallet
            contract_file: GnosisWallet.sol
            address: "0x8a5036176f957af5ad802fb33e218cab00fc98ac"
        token:
            contract_name: BitrewardsToken
            contract_file: BitrewardsToken.sol
            arguments:
                _name: "BitReward"
                _symbol: "BIT"
                _initialSupply: 0
                _decimals: 18
                _mintable: true
        crowdsale:
            contract_name: MintedTokenCappedCrowdsale
            contract_file: MintedTokenCappedCrowdsale.sol
            arguments:
                _token: "{{contracts.token.address}}"
                _pricingStrategy: "{{contracts.pricing_strategy.address}}"
                _multisigWallet: "{{contracts.team_multisig.address}}"
                _start: "{{ timestamp(datetime(2018, 3, 1, 0, 0)) }}"
                _end: "{{ timestamp(datetime(2018, 5, 10, 0, 0)) }}"
                _minimumFundingGoal: 40000000
                _maximumSellableTokens: 1040000000
        finalize_agent:
            contract_name: NullFinalizeAgent
            contract_file: NullFinalizeAgent.sol
            arguments:
                _crowdsale: "{{contracts.crowdsale.address}}"
    post_actions: |
        token.transact({"from": deploy_address}).setTransferAgent(team_multisig.address, True)
        token.transact({"from": deploy_address}).setTransferAgent(crowdsale.address, True)
        token.transact({"from": deploy_address}).setTransferAgent(finalize_agent.address, True)
        token.transact({"from": deploy_address}).setTransferAgent(deploy_address, True)
        confirm_tx(crowdsale.transact({"from": deploy_address}).setFinalizeAgent(finalize_agent.address))
        confirm_tx(token.transact({"from": deploy_address}).setReleaseAgent(deploy_address))
        confirm_tx(token.transact({"from": deploy_address}).setUpgradeMaster(team_multisig.address))
        confirm_multiple_txs( \
          crowdsale.transact({"from": deploy_address}).setEarlyParicipantWhitelist(deploy_address, True), \
          crowdsale.transact({"from": deploy_address}).setEarlyParicipantWhitelist("0x6d997eDcA04282950416FA380d834f360fC36eBb", True) \
        )
        confirm_tx(pricing_strategy.transact({"from": deploy_address}).setPreicoAddress("0x6d997eDcA04282950416FA380d834f360fC36eBb", 2083333333333))
    verify_actions: |
        assert token.call().owner().lower() == deploy_address.lower()
        assert token.call().released() == False
        assert crowdsale.call().owner().lower() == deploy_address.lower()
        assert crowdsale.call().multisigWallet().lower() == team_multisig.address.lower()
        assert finalize_agent.call().isSane()
        assert crowdsale.call().getState() == CrowdsaleState.PreFunding
        confirm_tx(crowdsale.transact({"from": deploy_address, "value": to_wei("0.01", "ether")}).buy())